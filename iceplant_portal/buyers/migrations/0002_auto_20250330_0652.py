# Generated by Django 5.1.7 on 2025-03-30 06:52

from django.db import migrations

def populate_buyers_from_sales(apps, schema_editor):
    """
    Creates buyer records from existing sales data.
    For each unique buyer name in the sales table, create a corresponding buyer.
    """
    Sale = apps.get_model('sales', 'Sale')
    Buyer = apps.get_model('buyers', 'Buyer')
    
    # Get all unique buyer names from sales
    buyer_names = Sale.objects.values_list('buyer_name', flat=True).distinct()
    
    # Create a buyer for each unique name
    for name in buyer_names:
        if name and name.strip():  # Skip empty names
            # Check if this buyer already exists
            if not Buyer.objects.filter(name=name).exists():
                # Get the most recent sale for this buyer to extract contact info
                latest_sale = Sale.objects.filter(buyer_name=name).order_by('-sale_date', '-sale_time').first()
                
                # Create the buyer
                Buyer.objects.create(
                    name=name,
                    phone=latest_sale.buyer_contact if latest_sale and latest_sale.buyer_contact else None,
                    is_active=True
                )

def link_sales_to_buyers(apps, schema_editor):
    """
    Links existing sales to the newly created buyers.
    """
    Sale = apps.get_model('sales', 'Sale')
    Buyer = apps.get_model('buyers', 'Buyer')
    
    # Update each sale with its corresponding buyer
    for sale in Sale.objects.all():
        if sale.buyer_name and sale.buyer_name.strip():
            buyer = Buyer.objects.filter(name=sale.buyer_name).first()
            if buyer:
                sale.buyer = buyer
                sale.save()

def reverse_migrations(apps, schema_editor):
    """
    Reverses the migration by clearing buyer references from sales.
    """
    Sale = apps.get_model('sales', 'Sale')
    Sale.objects.update(buyer=None)


class Migration(migrations.Migration):

    dependencies = [
        ('buyers', '0001_initial'),
        ('sales', '0004_sale_buyer'),
    ]

    operations = [
        migrations.RunPython(populate_buyers_from_sales, reverse_migrations),
        migrations.RunPython(link_sales_to_buyers, reverse_migrations),
    ]
