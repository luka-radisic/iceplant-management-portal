-- SQL commands to fix HR Payrol permissions
-- Generated by fix_hr_payrol_permissions.py


-- Find HR Payrol group ID
SELECT id, name FROM auth_group WHERE name = 'HR Payrol';


-- Create content type for module permissions if it doesn't exist
INSERT INTO django_content_type (app_label, model)
SELECT 'iceplant_core', 'modulepermission'
WHERE NOT EXISTS (
    SELECT 1 FROM django_content_type 
    WHERE app_label = 'iceplant_core' AND model = 'modulepermission'
);

-- Get the content type ID
SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission';


-- Create permission for attendance module
INSERT INTO auth_permission (name, content_type_id, codename)
SELECT 'Can access attendance module', 
       (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission'), 
       'access_attendance_module'
WHERE NOT EXISTS (
    SELECT 1 FROM auth_permission 
    WHERE codename = 'access_attendance_module' AND 
          content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission')
);

-- Get the permission ID
SELECT id FROM auth_permission 
WHERE codename = 'access_attendance_module' AND 
      content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission');


-- Create permission for sales module
INSERT INTO auth_permission (name, content_type_id, codename)
SELECT 'Can access sales module', 
       (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission'), 
       'access_sales_module'
WHERE NOT EXISTS (
    SELECT 1 FROM auth_permission 
    WHERE codename = 'access_sales_module' AND 
          content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission')
);

-- Get the permission ID
SELECT id FROM auth_permission 
WHERE codename = 'access_sales_module' AND 
      content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission');


-- Create permission for inventory module
INSERT INTO auth_permission (name, content_type_id, codename)
SELECT 'Can access inventory module', 
       (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission'), 
       'access_inventory_module'
WHERE NOT EXISTS (
    SELECT 1 FROM auth_permission 
    WHERE codename = 'access_inventory_module' AND 
          content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission')
);

-- Get the permission ID
SELECT id FROM auth_permission 
WHERE codename = 'access_inventory_module' AND 
      content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission');


-- Create permission for expenses module
INSERT INTO auth_permission (name, content_type_id, codename)
SELECT 'Can access expenses module', 
       (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission'), 
       'access_expenses_module'
WHERE NOT EXISTS (
    SELECT 1 FROM auth_permission 
    WHERE codename = 'access_expenses_module' AND 
          content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission')
);

-- Get the permission ID
SELECT id FROM auth_permission 
WHERE codename = 'access_expenses_module' AND 
      content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission');


-- Create permission for maintenance module
INSERT INTO auth_permission (name, content_type_id, codename)
SELECT 'Can access maintenance module', 
       (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission'), 
       'access_maintenance_module'
WHERE NOT EXISTS (
    SELECT 1 FROM auth_permission 
    WHERE codename = 'access_maintenance_module' AND 
          content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission')
);

-- Get the permission ID
SELECT id FROM auth_permission 
WHERE codename = 'access_maintenance_module' AND 
      content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission');


-- Create permission for buyers module
INSERT INTO auth_permission (name, content_type_id, codename)
SELECT 'Can access buyers module', 
       (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission'), 
       'access_buyers_module'
WHERE NOT EXISTS (
    SELECT 1 FROM auth_permission 
    WHERE codename = 'access_buyers_module' AND 
          content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission')
);

-- Get the permission ID
SELECT id FROM auth_permission 
WHERE codename = 'access_buyers_module' AND 
      content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission');


-- Assign attendance permission to HR Payrol
INSERT INTO auth_group_permissions (group_id, permission_id)
SELECT 
    (SELECT id FROM auth_group WHERE name = 'HR Payrol'), 
    (SELECT id FROM auth_permission 
     WHERE codename = 'access_attendance_module' AND 
           content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission'))
WHERE NOT EXISTS (
    SELECT 1 FROM auth_group_permissions 
    WHERE group_id = (SELECT id FROM auth_group WHERE name = 'HR Payrol') AND 
          permission_id = (SELECT id FROM auth_permission 
                          WHERE codename = 'access_attendance_module' AND 
                                content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission'))
);


-- Assign expenses permission to HR Payrol
INSERT INTO auth_group_permissions (group_id, permission_id)
SELECT 
    (SELECT id FROM auth_group WHERE name = 'HR Payrol'), 
    (SELECT id FROM auth_permission 
     WHERE codename = 'access_expenses_module' AND 
           content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission'))
WHERE NOT EXISTS (
    SELECT 1 FROM auth_group_permissions 
    WHERE group_id = (SELECT id FROM auth_group WHERE name = 'HR Payrol') AND 
          permission_id = (SELECT id FROM auth_permission 
                          WHERE codename = 'access_expenses_module' AND 
                                content_type_id = (SELECT id FROM django_content_type WHERE app_label = 'iceplant_core' AND model = 'modulepermission'))
);


-- Check HR Payrol permissions
SELECT p.codename, p.name
FROM auth_permission p
JOIN auth_group_permissions gp ON p.id = gp.permission_id
JOIN auth_group g ON gp.group_id = g.id
WHERE g.name = 'HR Payrol';

